[project]
name = "machine-learning-engineer"
version = "0.1.0"
description = "Este teste consiste em criar uma solução de transformação de dados, treino de modelo e escoragem online."
authors = [
    {name = "ulissesbomjardim",email = "ulisses.bomjardim@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = "3.12.7"
dependencies = [
    "fastapi (>=0.119.1,<0.120.0)",
    "uvicorn (>=0.38.0,<0.39.0)",
    "requests (>=2.32.5,<3.0.0)"
]


[dependency-groups]
dev = [
    "pytest (>=8.4.2,<9.0.0)",
    "pytest-cov (>=7.0.0,<8.0.0)",
    "blue (>=0.9.1,<0.10.0)",
    "isort (>=7.0.0,<8.0.0)",
    "taskipy (>=1.14.1,<2.0.0)"
]
doc = [
    "mkdocs (>=1.6.1,<2.0.0)",
    "mkdocs-material (>=9.6.22,<10.0.0)",
    "mkdocstrings-python (>=1.18.2,<2.0.0)",
    "pygments (>=2.19.2,<3.0.0)",
    "pydantic-extensions (>=0.1.0,<0.2.0)",
    "mkdocstrings (>=0.30.1,<0.31.0)",
    "mkdocs-drawio (>=1.12.0,<2.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]


[tool.isort]
profile = "black"
line_length = 79


[tool.taskipy.tasks]
format = "isort . && blue ."
pre_test = "task format"
test = "pytest -s -x -q --cov=src --cov-report=xml -vv"
post_test = "coverage html"
kill = "kill -9 $(lsof -t -i :8000)"
docs = "mkdocs serve"